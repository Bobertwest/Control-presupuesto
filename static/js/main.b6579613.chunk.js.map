{"version":3,"sources":["Components/Formulario.jsx","Components/NuevoGasto.jsx","Helpers/helpers.js","Components/Gastos.jsx","Components/PresupuestoFormulario.jsx","App.jsx","index.js"],"names":["Formulario","setPrimeraPregunta","setPresupuesto","errorMessage","setErrorMessage","showErrorMessage","setShowErrorMessage","setRestante","useState","cantidad","setCantidad","className","onSubmit","e","preventDefault","isNaN","type","step","placeholder","onChange","parseFloat","target","value","NuevoGasto","props","gasto","monto","descripcion","toFixed","protoTypes","PropTypes","object","isRequired","number","string","clases","presupuesto","restante","Gastos","gastos","length","map","i","id","array","PresupuestoFormulario","agregarNuevoGasto","shortid","generate","setGasto","nuevoGasto","setNuevoGasto","name","useEffect","trim","disabled","App","primeraPregunta","setGastos","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6579613.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../Styles/Formulario.css\";\r\n\r\nconst Formulario = ({\r\n  setPrimeraPregunta,\r\n  setPresupuesto,\r\n  errorMessage,\r\n  setErrorMessage,\r\n  showErrorMessage,\r\n  setShowErrorMessage,\r\n  setRestante,\r\n}) => {\r\n  const [cantidad, setCantidad] = useState(0); //En este estado se guarda el monto actual\r\n\r\n  //funcion para validar el monto\r\n  const add = (e) => {\r\n    e.preventDefault();\r\n    if (cantidad < 0) {\r\n      setErrorMessage(\"El monto tiene que ser mayor a 0.00\");\r\n      setShowErrorMessage(true);\r\n    } else if (typeof cantidad !== \"number\") {\r\n      setErrorMessage(\"El valor tiene que ser un número\");\r\n      setShowErrorMessage(true);\r\n    } else if (isNaN(cantidad)) {\r\n      setErrorMessage(\"Porfavor, introduzca un número\");\r\n      setShowErrorMessage(true);\r\n    } else {\r\n      setPresupuesto(cantidad);\r\n      setRestante(cantidad);\r\n      setPrimeraPregunta(false);\r\n    }\r\n  };\r\n\r\n  //Se captura el monto introducido en el imput\r\n  const obtenerCantidad = (e) => {\r\n    setCantidad(parseFloat(e.target.value));\r\n    if (showErrorMessage) {\r\n      setShowErrorMessage(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"formContainer\">\r\n      <h1 className=\"formTitle\">Ingresa tu presupuesto actual</h1>\r\n      <p className=\"basicInstructions\">\r\n        Coloca tu presupuesto actual y lleva un control de él.\r\n      </p>\r\n      <form className=\"form\" onSubmit={add}>\r\n        <input\r\n          type=\"number\"\r\n          step=\"0.01\"\r\n          className=\"budget\"\r\n          placeholder=\"Colocar presupuesto semanal\"\r\n          onChange={obtenerCantidad}\r\n        />\r\n        <p className=\"errormessage\">{showErrorMessage ? errorMessage : null}</p>\r\n        <input type=\"submit\" value=\"Agregar\" className=\"budgetSubmit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nFormulario.propTypes = {\r\n  errorMessage: PropTypes.string.isRequired,\r\n  showErrorMessage: PropTypes.bool.isRequired,\r\n  setPrimeraPregunta: PropTypes.func.isRequired,\r\n  setPresupuesto: PropTypes.func.isRequired,\r\n  setErrorMessage: PropTypes.func.isRequired,\r\n  setShowErrorMessage: PropTypes.func.isRequired,\r\n  setRestante: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../Styles/nuevoGasto.css\";\r\n\r\nconst NuevoGasto = (props) => {\r\n  const {\r\n    gasto: { monto, descripcion },\r\n  } = props;\r\n  return (\r\n    <div className=\"nuevoGastoContainer\">\r\n      <h4 className=\"descripcion\">{descripcion}</h4>\r\n      <h4 className=\"costo\">{`-${monto.toFixed(2)}`}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nNuevoGasto.protoTypes = {\r\n  gasto: PropTypes.object.isRequired,\r\n  monto: PropTypes.number.isRequired,\r\n  descripcion: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default NuevoGasto;\r\n","export const clases = (presupuesto, restante) => {\r\n  let clase;\r\n  if (presupuesto / 4 > restante) {\r\n    clase = \"rojo\";\r\n  } else if (presupuesto / 2 > restante) {\r\n    clase = \"amarillo\";\r\n  } else {\r\n    clase = \"verde\";\r\n  }\r\n\r\n  return clase;\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../Styles/gastos.css\";\r\nimport NuevoGasto from \"./NuevoGasto\";\r\nimport { clases } from \"../Helpers/helpers\";\r\n\r\nconst Gastos = ({ gastos, presupuesto, restante }) => {\r\n  return (\r\n    <div className=\"gastosContainer\">\r\n      <h2 className=\"gastosTitle\">Tus gastos</h2>\r\n      {gastos.length > 0 ? (\r\n        gastos.map((i) => <NuevoGasto key={i.id} gasto={i} />)\r\n      ) : (\r\n        <h2 className=\"noGastosMessage\">No tienes gastos</h2>\r\n      )}\r\n      <h3 className=\"presupuestoActual\">{`Presupuesto: $ ${presupuesto.toFixed(\r\n        2\r\n      )}`}</h3>\r\n      <h4\r\n        className={clases(\r\n          presupuesto,\r\n          restante\r\n        )}>{`Restante: $ ${restante.toFixed(2)}`}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nGastos.protoTypes = {\r\n  gasto: PropTypes.array.isRequired,\r\n  presupuesto: PropTypes.number.isRequired,\r\n  restante: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Gastos;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport shortid from \"shortid\";\r\nimport \"../Styles/presupuestoFormulario.css\";\r\n\r\nconst PresupuestoFormulario = ({\r\n  showErrorMessage,\r\n  setShowErrorMessage,\r\n  errorMessage,\r\n  setErrorMessage,\r\n  agregarNuevoGasto,\r\n  setRestante,\r\n  restante,\r\n}) => {\r\n  //estados de el formulario\r\n  const [gasto, setGasto] = useState({\r\n    monto: \"\",\r\n    descripcion: \"\",\r\n    id: shortid.generate(),\r\n  });\r\n\r\n  const [nuevoGasto, setNuevoGasto] = useState();\r\n\r\n  //Funcion de validacion de inputs\r\n  const agregarGasto = (e) => {\r\n    e.preventDefault();\r\n    const { monto, descripcion } = gasto;\r\n    if (monto === \"\" || descripcion.trim() === \"\") {\r\n      setErrorMessage(\"Todos los campos son obligatorios\");\r\n      setShowErrorMessage(true);\r\n    } else if (typeof monto !== \"number\") {\r\n      setErrorMessage(\"El valor del monto tiene que ser un número\");\r\n      setShowErrorMessage(true);\r\n    } else if (isNaN(monto)) {\r\n      setErrorMessage(\"Por favor, introduzca un número\");\r\n      setShowErrorMessage(true);\r\n    } else if (monto > restante) {\r\n      setErrorMessage(\"El gasto supera tu presupuesto actual\");\r\n      setShowErrorMessage(true);\r\n    } else if (monto < 0) {\r\n      setErrorMessage(\"El monto tiene que ser superior a 0\");\r\n      setShowErrorMessage(true);\r\n    } else {\r\n      setRestante(restante.toFixed(2) - monto.toFixed(2)); //El nuevo presupuesto sera el preupuesto actual menos el monto agregado\r\n      setNuevoGasto(gasto);\r\n    }\r\n  };\r\n\r\n  //Estados que captura los cambios de los inputs\r\n  const onChange = (e) => {\r\n    if (showErrorMessage) {\r\n      setShowErrorMessage(false);\r\n    }\r\n    if (e.target.name === \"monto\") {\r\n      setGasto({\r\n        ...gasto,\r\n        [e.target.name]: parseFloat(e.target.value),\r\n      });\r\n    } else {\r\n      setGasto({\r\n        ...gasto,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Cada vez que cambie el presupuesto, se ejecuta esto\r\n  useEffect(() => {\r\n    agregarNuevoGasto(nuevoGasto);\r\n    setGasto({\r\n      monto: \"\",\r\n      descripcion: \"\",\r\n      id: shortid.generate(),\r\n    });\r\n  }, [restante, nuevoGasto]);\r\n\r\n  return (\r\n    <form className=\"addContainer\" onSubmit={agregarGasto}>\r\n      <h2 className=\"addTitle\">Agregar gasto</h2>\r\n      <h4 className=\"tituloInput\">Descripción: </h4>\r\n      <input\r\n        type=\"text\"\r\n        name=\"descripcion\"\r\n        placeholder=\"Ej. Transporte\"\r\n        className=\"description\"\r\n        onChange={onChange}\r\n        value={gasto.descripcion}\r\n      />\r\n      <h4 className=\"tituloInput\">Gasto ($): </h4>\r\n      <input\r\n        type=\"number\"\r\n        step=\"0.01\"\r\n        name=\"monto\"\r\n        placeholder=\"0\"\r\n        className=\"amount\"\r\n        onChange={onChange}\r\n        value={gasto.monto}\r\n      />\r\n      <p className=\"errormessage\">{showErrorMessage ? errorMessage : null}</p>\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Agregar\"\r\n        className=\"addSubmint\"\r\n        disabled={restante === 0.0}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nPresupuestoFormulario.propTypes = {\r\n  presupuesto: PropTypes.number.isRequired,\r\n  errorMessage: PropTypes.string.isRequired,\r\n  showErrorMessage: PropTypes.bool,\r\n  agregarNuevoGasto: PropTypes.func.isRequired,\r\n  setShowErrorMessage: PropTypes.func.isRequired,\r\n  setErrorMessage: PropTypes.func.isRequired,\r\n  setRestante: PropTypes.func.isRequired,\r\n  restante: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default PresupuestoFormulario;\r\n","import React, { useState } from \"react\";\nimport Formulario from \"./Components/Formulario\";\nimport Gastos from \"./Components/Gastos\";\nimport PresupuestoFormulario from \"./Components/PresupuestoFormulario\";\nimport \"./Styles/App.css\";\n\nfunction App() {\n  const [primeraPregunta, setPrimeraPregunta] = useState(true);\n  const [presupuesto, setPresupuesto] = useState(0);\n  const [restante, setRestante] = useState(0);\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [gastos, setGastos] = useState([]);\n\n  const agregarNuevoGasto = (gasto) => {\n    if (gasto !== undefined && gasto !== null) {\n      setGastos([...gastos, gasto]);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"pageTitle\">Control de gastos</h1>\n      <div className=\"container\">\n        {primeraPregunta ? (\n          <Formulario\n            setPrimeraPregunta={setPrimeraPregunta}\n            setPresupuesto={setPresupuesto}\n            showErrorMessage={showErrorMessage}\n            setShowErrorMessage={setShowErrorMessage}\n            errorMessage={errorMessage}\n            setErrorMessage={setErrorMessage}\n            setRestante={setRestante}\n          />\n        ) : (\n          <div className=\"presupuesto\">\n            <PresupuestoFormulario\n              setPresupuesto={setPresupuesto}\n              showErrorMessage={showErrorMessage}\n              setShowErrorMessage={setShowErrorMessage}\n              errorMessage={errorMessage}\n              setErrorMessage={setErrorMessage}\n              agregarNuevoGasto={agregarNuevoGasto}\n              setRestante={setRestante}\n              restante={restante}\n            />\n            <Gastos\n              gastos={gastos}\n              presupuesto={presupuesto}\n              restante={restante}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}